/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import git.GitRepo;
import java.awt.Frame;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author U292156
 */
public class GitSnapshot extends javax.swing.JDialog {

    /**
     * Creates new form GitSnapshot
     */
    public GitSnapshot(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        DefaultListModel model = new DefaultListModel();
        ctrlMessages.setModel(model);
        
        try {
            /// Test
            GitRepo repo = new GitRepo("d:\\lsyh\\deskbase\\cmsweb");
            ArrayList<String> branches = repo.getBranches();
            Iterator it = branches.iterator();
            model.addElement("Branches:");
            while (it.hasNext()) {
                model.addElement(it.next());
            }
            
            model.addElement(" ");
            model.addElement("Comments");
            HashMap comments = repo.getComments("DBWG-28");
            it = comments.keySet().iterator();
            while (it.hasNext()) {
                String key = (String) it.next();
                model.addElement(" ");
                model.addElement(key);
                model.addElement(comments.get(key));
            }
        } catch (IOException ex) {
            model.addElement(ex);
            Logger.getLogger(GitSnapshot.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ctrlMessages = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuRepository = new javax.swing.JMenuItem();
        MenuGit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Git package maker");

        jScrollPane1.setViewportView(ctrlMessages);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/Bundle"); // NOI18N
        jMenu1.setText(bundle.getString("GitPackages.jMenu1.text")); // NOI18N

        MenuRepository.setText(bundle.getString("GitPackages.MenuRepository.text")); // NOI18N
        MenuRepository.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuRepositoryActionPerformed(evt);
            }
        });
        jMenu1.add(MenuRepository);

        MenuGit.setText(bundle.getString("GitPackages.MenuGit.text")); // NOI18N
        MenuGit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuGitActionPerformed(evt);
            }
        });
        jMenu1.add(MenuGit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(bundle.getString("GitPackages.jMenu2.text")); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuGitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuGitActionPerformed
        ProjectDelete dlg = new ProjectDelete((Frame) this.getParent(), true);
        dlg.setVisible(true);
    }//GEN-LAST:event_MenuGitActionPerformed

    private void MenuRepositoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuRepositoryActionPerformed
        ProjectAdd dlg = new ProjectAdd((Frame) this.getParent(), true);
        dlg.setVisible(true);

    }//GEN-LAST:event_MenuRepositoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GitSnapshot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GitSnapshot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GitSnapshot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GitSnapshot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                GitSnapshot dialog = new GitSnapshot(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuGit;
    private javax.swing.JMenuItem MenuRepository;
    private javax.swing.JList ctrlMessages;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
